run `npx sequelize init`
this will use .sequelizerc to make the folders in this folder and a new config folder
change the dialect in the config file to 'postgres'
this path will be in .gitignore, so orgnaize it how you want

then run `createuser <username>`
then run `createdb <database-name> -O <username>`

the models are already made, run `npx sequelize db:migrate` which will translate the migrations into tables in the database
when editing the models, also edit the migrations, make sure they're consistent.

For dummy data, add stuff in seeders/ with `npx sequelize seed:generate --name <table-name>` and then run `npx sequelize db:seed:all`

if you mess something up just purge the database :)

For the command-line interface for postgres,
/h for SQL commands and /? for psql commands

=====

models/ contains the models of the tables in the database. These are what you need to import in other files to be able to interact with the tables.
migrations/ are used to create the tables and migrate them. Keep them consistent with the models. Also, in the models there is no need to add id, createdAt or UpdatedAt since the sequelize command automatically makes those when making migrations.

Inside of models/ don't touch index.js, that was autogenerated.

To create more models use the command `npx sequelize model:generate --name <model-name> --attributes <attributes>`
the attributes need to be in this format: `<attribute-name>:<data-type>,<attribute-name>:<data-type>`
Each attribute needs to be separated by a comma, NO SPACES
postgres data types can be found here: https://www.postgresql.org/docs/current/datatype.html


